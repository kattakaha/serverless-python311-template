name: Test

on:
  push:
    branches:
      - "**"

jobs:
  Test:
    name: Test
    runs-on: ubuntu-latest
    # runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Python
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v5
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: "3.11.6"
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: "x64"

      - name: Set sha_short
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Create dot env file
        shell: bash
        run: |
          touch .env
          version=$(node -p -e "require('./package.json').version" | sed 's/\.[^.]*$//')
          echo "API_VERSION_HASH=$version.${{ steps.vars.outputs.sha_short }}" >> .env
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install poetry
        run: pip install poetry
      - name: Install dependencies
        run: poetry install --no-root
      - name: Run format
        run: poetry run task format
      - name: Run lint
        run: poetry run task lint
      - name: Run tests
        run: poetry run task test
